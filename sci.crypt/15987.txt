let build softwar cryptophon internet  tri code yesterday sparcstat elc take second compress second worth speech mean need optim factor usabl even half duplex mode  ouch thank tri  follow program quick hack creat month ago determin whether sun sparcstat ipc could perform real time full duplex encrypt audio result data rate sustain today modem  test program read linearli encod audio audio devic compress gsm compress frame bit sampl record khz bit result hz frame rate encrypt de revers process send reconstruct audio back audio devic compress encrypt audio stream kbit  sparcstat ipc exactli fast machin day certainli slower elc would bare sustain activ audio underrun would occcur speech intellig ran real time process get best result rememb though program quick hack perform certainli improv  audio compress routin ftp tub c tu berlin de believ look gsm toast use eric young de implement longer know got  cheer greg  cut  test program see much cpu take secur digit audio  written sun ipc run solari sun isdn bu card speakerbox  includ stdlib h includ unistd h includ fcntl h includ stdio h includ sy type h includ sy audioio h includ stropt h  includ gsm h includ de h  boolean sv audio init int fd audio info prev info  audio info info  prev info null ioctl fd audio getinfo prev info perror audio getinfo return b fals    audio initinfo info  info record paus b true info play paus b true  info play sampl rate info play encod audio encod linear info play channel info play precis info record sampl rate info record encod audio encod linear info record channel info record precis  info record buffer size  ioctl fd audio setinfo info perror audio setinfo return b fals   ioctl fd flush flushrw perror flush return b fals    audio initinfo info  info record paus b fals info play paus b fals  ioctl fd audio setinfo info perror audio setinfo return b fals   return b true    boolean sv int ifd gsm handl gsm byte buf  gsm signal sampl  read ifd sampl sizeof sampl sizeof sampl fprintf stderr sv short read n return b fals   gsm encod handl sampl buf  return b true    boolean sv int ofd gsm handl gsm byte buf  gsm signal sampl  gsm decod handl buf sampl fprintf stderr sv gsm decod fail n return b fals   write ofd sampl sizeof sampl sizeof sampl fprintf stderr sv short write n return b fals   return b true    main  gsm handl gsm frame frame int audiofd int option de cblock key ivec ivec de key schedul k k de cblock cbuf cbuf cbuf buf  audiofd open dev audio rdwr audiofd perror open exit    initi gsm compress code  handl gsm creat null fprintf stderr sv gsm creat fail n exit   option b true gsm option handl gsm opt fast option fprintf stderr sv gsm option fast fail n exit    initi de code  de random key key  de set key key k fprintf stderr sv de set key fail n exit  de set key key k fprintf stderr sv de set key fail n exit  memset ivec sizeof ivec memset ivec sizeof ivec   open audio devic configur  sv audio init audiofd null exit    get sampl bit linear hz convert byte frame  sv audiofd handl frame exit   encrypt decrypt block  de cbc encrypt frame cbuf long k ivec de encrypt de cbc encrypt cbuf cbuf buf long k ivec de decrypt  memmov frame cbuf buf   memcmp cbuf cbuf buf fprintf stderr sv memcmp fail n exit  endif   take byte frame convert sampl play  sv audiofd handl frame exit   gsm destroy handl  cut 