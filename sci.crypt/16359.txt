authent one time pad advanc one time pad  one time pad yeild ideal secur well known flaw authent suppos use random bit stream pad exclus encrypt oper adversari know plaintext messag chang messag work  alic send bob plaintext p key stream alic comput ciphertext c xor p send bob  eve know plainext p want messag appear p eve intercept c comput c c xor p xor p xor p eve send c bob  bob decrypt c comput c xor p thu receiv fals messag substitut eve  firstli asid  agre weak exist lot troubl believ repres difficulti real life given  purpos one time pad give unbreak secur expens key distribut etc impli client realli want level secur  peopl want keep p secret  find hard believ eve might happen copi p lie around  awar argument appli eve know even small part messag eve must know exactli byte c known susequ start result garbl find least surpris  back question  resourc use one time pad transmiss would also append messag authent code messag use next bit one time pad key perhap origin question basic ask whether way authent messag degre secur pad provid know answer howev would propos follow discus  alic bob arbitrari number secret random bit share eve know find effect know p correspond c fact correspond caus problem messag authent code creat use one time pad oper eve could know part mac affect part input would unabl forg mac correspond  requir non linear combin part messag non linear simpli xore subtract whatev exactli effect  end encrypt messag c alic append n bit mac comput follow mean next full chunk one time pad comput c p xor pad n bit boundari break c n bit chunk set mac initialis vector chunk sequenti set mac mac nlop c  end process mac messag authent code  bob verifi mac obviou manner recov plaintext p use pad reproduc mac manner  nlop non linear oper rub simplest non linear oper think box fix even publish permut n bit integ index tabl call sbox use x nlop x xor sbox  practic speak think solv problem eve never see intermedi output c henc deduc perform valid substitut  also practic speak want mac fairli larg say bit might want gigabyt say box might work byte size box think irrelev detail discus hand  first point error give pointer literatur  greg rose australian comput commun institut use standard phrase hijack may inadvis caa 